<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:component-scan base-package="io.tyloo.sample.dubbo*"/>

    <util:properties id="tccJdbc" location="classpath:tccjdbc.properties"/>

    <!-- 设置恢复策略(可选） -->
    <bean class="io.tyloo.spring.recover.DefaultTylooTransactionRecoverConfig">
        <!-- maxRetryCount表示一个事务最多尝试恢复次数，超过将不在自动恢复，需要人工干预，默认是30次 -->
        <property name="maxRetryCount" value="30"/>
        <!-- recoverDuration表示一个事务日志当超过一定时间间隔后没有更新就会被认为是发生了异常，需要恢复，
    恢复Job将扫描超过这个时间间隔依旧没有更新的事务日志，并对这些事务进行恢复，时间单位是秒，默认是120秒 -->
        <property name="recoverDuration" value="60"/>
        <!-- cronExpression表示恢复Job触发间隔配置，默认是(每分钟)0 */130 * * * * ? -->
        <property name="cronExpression" value="0/30 * * * * ?"/>
    </bean>

    <!-- 使用SpringJdbc事务库 -->
    <bean id="transactionRepository"
          class="io.tyloo.spring.repository.SpringJdbcTransactionRepository">
        <property name="dataSource" ref="tccDataSource"/>
        <property name="domain" value="CAPITAL"/>
        <property name="tbSuffix" value="_CAP"/>
    </bean>

    <!-- TCC事务日志库数据源 -->
    <bean id="tccDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close" lazy-init="false">
        <property name="driverClass" value="#{tccJdbc['jdbc.driverClassName']}"/>
        <property name="jdbcUrl" value="#{tccJdbc['tcc.jdbc.url']}"/>
        <property name="user" value="#{tccJdbc['jdbc.username']}"/>
        <property name="password" value="#{tccJdbc['jdbc.password']}"/>
        <property name="initialPoolSize" value="#{tccJdbc['c3p0.initialPoolSize']}"/>
        <property name="minPoolSize" value="#{tccJdbc['c3p0.minPoolSize']}"/>
        <property name="maxPoolSize" value="#{tccJdbc['c3p0.maxPoolSize']}"/>
        <property name="acquireIncrement" value="#{tccJdbc['c3p0.acquireIncrement']}"/>
        <property name="maxIdleTime" value="#{tccJdbc['c3p0.maxIdleTime']}"/>
        <property name="checkoutTimeout" value="#{tccJdbc['c3p0.checkoutTimeout']}"/>
    </bean>

    <!--<bean id="transactionRepository" class="RedisTransactionRepository">-->
    <!--<property name="keyPrefix" value="TCC:CAP:"/>-->
    <!--<property name="jedisPool" ref="jedisPool"/>-->
    <!--</bean>-->

    <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
    <!--<property name="maxTotal" value="1000"/>-->
    <!--<property name="maxWaitMillis" value="1000"/>-->
    <!--</bean>-->

    <!--<bean id="jedisPool" class="redis.clients.jedis.JedisPool">-->
    <!--<constructor-arg index="0" ref="jedisPoolConfig"/>-->
    <!--<constructor-arg index="1" value="127.0.0.1"/>-->
    <!--<constructor-arg index="2" value="6379" transactionType="int"/>-->
    <!--<constructor-arg index="3" value="1000" transactionType="int"/>-->
    <!--<constructor-arg index="4" transactionType="java.lang.String">-->
    <!--<null/>-->
    <!--</constructor-arg>-->
    <!--<constructor-arg index="5" value="0" transactionType="int"/>-->
    <!--</bean>-->

</beans>